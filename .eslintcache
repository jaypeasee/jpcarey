[{"/Users/jpcarey/turing/personal-page/src/index.js":"1","/Users/jpcarey/turing/personal-page/src/reportWebVitals.js":"2","/Users/jpcarey/turing/personal-page/src/NavBar/NavBar.js":"3","/Users/jpcarey/turing/personal-page/src/App/App.js":"4","/Users/jpcarey/turing/personal-page/src/Home/Home.js":"5","/Users/jpcarey/turing/personal-page/src/Contact/Contact.js":"6","/Users/jpcarey/turing/personal-page/src/Resume/Resume.js":"7","/Users/jpcarey/turing/personal-page/src/Photos/Photos.js":"8"},{"size":278,"mtime":1608941368786,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1608842248185,"results":"11","hashOfConfig":"10"},{"size":4959,"mtime":1609020397070,"results":"12","hashOfConfig":"10"},{"size":1821,"mtime":1609014427552,"results":"13","hashOfConfig":"10"},{"size":3614,"mtime":1609014053320,"results":"14","hashOfConfig":"10"},{"size":4700,"mtime":1609014015226,"results":"15","hashOfConfig":"10"},{"size":469,"mtime":1609014166000,"results":"16","hashOfConfig":"10"},{"size":4183,"mtime":1609120796010,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"9mu6z2",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jpcarey/turing/personal-page/src/index.js",[],["38","39"],"/Users/jpcarey/turing/personal-page/src/reportWebVitals.js",[],["40","41"],"/Users/jpcarey/turing/personal-page/src/NavBar/NavBar.js",[],"/Users/jpcarey/turing/personal-page/src/App/App.js",[],"/Users/jpcarey/turing/personal-page/src/Home/Home.js",["42"],"import React, {Component} from 'react'\nimport './Home.scss'\nimport billsGame from './images/billsGame.jpeg'\nimport familyPhoto from './images/familyPhoto.jpeg'\nimport japanIcicle from './images/japanIcicle.jpeg'\nimport mexicoPelican from './images/mexicoPelican.jpeg'\nimport nileSpecial from './images/nileSpecial.jpeg'\nimport pathfinderCanoe from './images/pathdinderCanoe.jpeg'\nimport wendyTetons from './images/wendyTetons.jpeg'\nimport yurtSkinning from './images/yurtSkinning.jpeg'\nimport tetonsBackside from './images/tetonsBackside.jpeg'\nimport frontPage from './images/frontPage.jpeg'\nimport severnRiver from './images/severnRiver.jpg'\nimport bigKahuna from './images/bigKahuna.JPG'\nimport ftowStradle from './images/ftowStradle.jpg'\nimport feelGood from './images/feelGood.jpg'\nimport severnMars from './images/severnMars.jpg'\nimport windigoCar from './images/windigoCar.jpg'\nimport japanVan from './images/japanVan.jpeg'\nimport furanoSkin from './images/furanoSkin.JPG'\nimport topoDuo from './images/topoDuo.JPG'\nimport UIfx from 'uifx'\nimport btnClick from '../Sounds/btnClick.mp3'\n\n\nclass Home extends Component {\n    constructor() {\n        super()\n        this.state = {\n            allProfilePics: [\n                billsGame,\n                familyPhoto,\n                japanIcicle,\n                mexicoPelican,\n                nileSpecial,\n                pathfinderCanoe,\n                wendyTetons,\n                yurtSkinning,\n                tetonsBackside,\n                frontPage,\n                severnRiver,\n                bigKahuna,\n                ftowStradle,\n                feelGood,\n                severnMars,\n                windigoCar,\n                topoDuo,\n                furanoSkin,\n                japanVan\n            ],\n            currentProfilePic: \"\",\n        }\n        this.click = new UIfx(btnClick, {\n            volume: .1\n        })\n    }\n\n    componentDidMount() {\n        this.updateRandomProfileImg()\n    }\n\n    updateRandomProfileImg = () => {\n        if (this.state.currentProfilePic) {\n            this.click.play();\n        }\n        if (!this.state.allProfilePics.length) {\n            this.resetImgList()\n        } else {\n            const randomImg = this.state.allProfilePics\n                [Math.floor(Math.random() * this.state.allProfilePics.length)]\n            this.setState({\n                currentProfilePic: randomImg,\n                allProfilePics: this.state.allProfilePics.filter(img => {\n                    return img !== randomImg\n                })\n            })\n        }\n    }\n\n    resetImgList = () => {\n        this.setState({\n            allProfilePics: [\n                billsGame,\n                familyPhoto,\n                japanIcicle,\n                mexicoPelican,\n                nileSpecial,\n                pathfinderCanoe,\n                wendyTetons,\n                yurtSkinning,\n                tetonsBackside,\n                frontPage,\n                severnRiver,\n                bigKahuna,\n                ftowStradle,\n                feelGood,\n                severnMars,\n                windigoCar,\n                topoDuo,\n                furanoSkin,\n                japanVan\n            ],\n        })\n    }\n\n    render() {\n        return (\n            <section className=\"profile-img-section\">\n                <img \n                    src={this.state.currentProfilePic}\n                    alt=\"profile image of me\"\n                    className=\"profile-img\"\n                    onClick={this.updateRandomProfileImg}\n                />\n            </section>\n        )\n    }\n}\n\nexport default Home","/Users/jpcarey/turing/personal-page/src/Contact/Contact.js",["43","44","45","46"],"import React from 'react'\nimport './Contact.scss'\nimport instagram from './images/instagram.png'\nimport linkedin from './images/linkedin.png'\nimport github from './images/github.png'\nimport gmail from './images/gmail.png'\nimport UIfx from 'uifx'\nimport btnClick from '../Sounds/btnClick.mp3'\nimport btnTick from '../Sounds/btnTick.mp3'\nimport thumbTack from '../images/thumbTack.png'\n\n\nconst Contact = () => {\n    const click = new UIfx(btnClick, {\n        volume: .1\n    })\n    const tick = new UIfx(btnTick, {\n        volume: .1\n    })\n\n    return (\n        <section className=\"contact-section\">\n            <div className=\"contact-board\">\n                <section className=\"contact-card\">\n                    <div className=\"board-pins-top\">\n                        <img \n                            src={thumbTack}\n                            className={\"board-pin\"}\n                        />\n                        <img \n                            src={thumbTack}\n                            className={\"board-pin\"}\n                        />\n                    </div>\n                    <h2>Reach Out!</h2>\n                        <a\n                            href=\"mailto:jpcarey4@gmail.com\"\n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            className=\"icon-anchor-combo\"\n                            onClick={() => click.play()}\n                        >\n                            <img \n                                src={gmail}\n                                alt=\"Gmail logo\"\n                                role=\"button\"\n                                className=\"contact-logo\"\n                                onMouseOver={() => tick.play()}\n                            />\n                            <p className=\"contact-link-txt\">jpcarey4@gmail.com</p>\n                        </a>\n                        <a \n                            href=\"https://github.com/jaypeasee\"\n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            className=\"icon-anchor-combo\"\n                            onClick={() => click.play()}\n                        >\n                            <img \n                                src={github}\n                                alt=\"Github logo\"\n                                role=\"button\"\n                                className=\"contact-logo\"\n                                onMouseOver={() => tick.play()}\n                            />\n                            <p className=\"contact-link-txt\">Github</p>\n                        </a>  \n                        <a\n                            href=\"https://www.linkedin.com/in/jpcareyiv/\"\n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            className=\"icon-anchor-combo\"\n                            onClick={() => click.play()}\n                        >\n                            <img \n                                src={linkedin}\n                                alt=\"LinkedIn logo\"\n                                role=\"button\"\n                                className=\"contact-logo\"\n                                onMouseOver={() => tick.play()}\n                            />\n                            <p className=\"contact-link-txt\">LinkedIn</p>\n                        </a>                 \n                        <a \n                            href=\"https://www.instagram.com/jaypeasee4/\"\n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            className=\"icon-anchor-combo\"\n                            onClick={() => click.play()}\n                        >\n                            <img \n                                src={instagram}\n                                alt=\"Instagram Logo\"\n                                role=\"button\"\n                                className=\"contact-logo\"\n                                onMouseOver={() => tick.play()}\n                            />\n                            <p className=\"contact-link-txt\">Instagram</p>\n                        </a>\n                        <div className=\"board-pins-top\">\n                        <img \n                            src={thumbTack}\n                            className={\"board-pin\"}\n                        />\n                        <img \n                            src={thumbTack}\n                            className={\"board-pin\"}\n                        />\n                    </div>\n                </section> \n            </div>\n        </section>\n    )\n}\n\nexport default Contact","/Users/jpcarey/turing/personal-page/src/Resume/Resume.js",[],"/Users/jpcarey/turing/personal-page/src/Photos/Photos.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"47","replacedBy":"51"},{"ruleId":"49","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":109,"column":17,"nodeType":"55","endLine":114,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":26,"column":25,"nodeType":"55","endLine":29,"endColumn":27},{"ruleId":"56","severity":1,"message":"57","line":30,"column":25,"nodeType":"55","endLine":33,"endColumn":27},{"ruleId":"56","severity":1,"message":"57","line":101,"column":25,"nodeType":"55","endLine":104,"endColumn":27},{"ruleId":"56","severity":1,"message":"57","line":105,"column":25,"nodeType":"55","endLine":108,"endColumn":27},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],["58"],["59"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]